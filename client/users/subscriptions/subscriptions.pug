- self.add_raw_data('mark_cut_ts', self.mark_cut_ts)

-  self.icon = function(type) {
-   var types = '$$ JSON.stringify(N.models.users.Subscription.types) $$'
-
-   switch(type) {
-     case types.WATCHING:
-       return 'icon-track-watching';
-     case types.TRACKING:
-       return 'icon-track-tracking';
-     case types.NORMAL:
-       return 'icon-track-normal';
-     case types.MUTED:
-       return 'icon-track-muted';
-   }
- }

#content.user-subscriptions-root
  != self.partial('@common.blocks.navbar.logo_apps')

  nav.breadcrumbs-container
    .layout__container.container-fluid
      != self.partial('@users.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@common.blocks.announces')

    .user-tracker__filter
      a.btn.btn-outline-secondary(href=self.link_to('users.tracker'))= self.t('tracker')
      a.btn.btn-outline-success(href=self.link_to('users.subscriptions'))= self.t('subscriptions')
      button.btn.btn-outline-secondary.btn-square.icon.icon-check-single(
        type='button'
        data-on-click='users.subscriptions.' + self.type + ':mark_tab_read'
        title=self.t('mark_tab_read')
      )
      button.btn.btn-outline-secondary.btn-square.icon.icon-check(
        type='button'
        data-on-click='users.subscriptions:mark_all_read'
        title=self.t('mark_all_read')
      )

    ul.content-tabs
      each tab in self.tabs
        li.content-tabs-item
          a.content-tabs-link(
            href=self.link_to('users.subscriptions', { $query: { type: tab.type } })
            class=(self.type === tab.type ? 'active' : '')
          )
            = self.t('@users.subscriptions.' + tab.type)
            span.content-tabs-counter= tab.count

    if self.items.length === 0
      .user-subscriptions__no-items=self.t('no_subscriptions')

    else
      .user-subscriptions-list
        != self.partial('@users.subscriptions.blocks.' + self.type, { block_name: self.type })
