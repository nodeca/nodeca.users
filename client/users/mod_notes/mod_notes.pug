- var user_to = self.users[self.user_id];

#content
  -
    const navbar_base = {
      level_up: self.link_to('users.member', { user_hid: user_to.hid })
    };

  != self.partial('@common.blocks.navbar.levelup_apps', navbar_base)

  nav.breadcrumbs-container
    .layout__container.container-fluid
      !=self.partial('@users.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@users.blocks.announces')

    header.page-head
      h1.page-head__title(itemprop='name')
        =self.t('title')
        .float-end
          .page-actions
            button.btn.btn-secondary.btn-square.icon.icon-plus(
              data-on-click='users.mod_notes:edit'
              title=self.t('add_note')
              data-user-hid=user_to.hid
              data-user-nick=user_to.nick
            )

    if self.notes.length === 0
      p.mod-notes-no-items=self.t('no_notes')
    else
      each note in self.notes
        - var user_from = self.users[note.from];
        .mod-notes-item
          .mod-notes-item__info
            .mod-notes-item__info-aside
              if user_from
                a.mod-notes-item__avatar(
                  href=self.link_to('users.member', { user_hid: user_from.hid })
                  title=user_from.name
                )
                  img.mod-notes-item__avatar-image(alt=user_from.name)&attributes(self.avatar(user_from, 'md'))
              else
                span.mod-notes-item__avatar-image.av-anon

            .mod-notes-item__info-data
              .mod-notes-item__author
                if user_from
                  a.mod-notes-item__author-link(
                    href=self.link_to('users.member', { user_hid: user_from.hid })
                  )= user_from.nick

              .mod-notes-item__ts!=self.timetag(note.ts, 'compact')

            - var can_edit = note.from === self.runtime.user_id && (self.settings.mod_notes_edit_max_time === 0 || (new Date(note.ts).getTime() > Date.now() - self.settings.mod_notes_edit_max_time * 60 * 1000));
            - var can_delete = self.settings.can_delete_mod_notes || (note.from === self.runtime.user_id && (self.settings.mod_notes_edit_max_time === 0 || (new Date(note.ts).getTime() > Date.now() - self.settings.mod_notes_edit_max_time * 60 * 1000)));

            if can_edit || can_delete
              .mod-notes-item__controls
                .mod-notes-item__controls-inner
                  if can_edit
                    button.mod-notes-item__controls-btn.btn.btn-link.btn-xs.icon.icon-edit(
                      title=self.t('edit_note')
                      data-on-click='users.mod_notes:edit'
                      data-note-id=note._id
                      data-user-hid=user_to.hid
                      data-user-nick=user_to.nick
                      data-md=note.md
                    )
                  if can_delete
                    button.mod-notes-item__controls-btn.btn.btn-link.btn-xs.icon.icon-x(
                      title=self.t('delete_note')
                      data-on-click='users.mod_notes:delete'
                      data-note-id=note._id
                    )

          .mod-notes-item__content!=note.html
